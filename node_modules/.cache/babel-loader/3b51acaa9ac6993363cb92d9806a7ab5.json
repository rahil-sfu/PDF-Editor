{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/PdfEditor/react-pdf-editor/src/Components/ModifyPage.js\";\nimport React, { useEffect } from 'react';\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\n\nfunction ModifyPage(props) {\n  useEffect(() => {\n    if (props.buttonType === \"download\") {\n      modifyPdf();\n      props.resetButtonType();\n    }\n  }, [props.buttonType]);\n\n  async function modifyPdf() {\n    const existingPdfBytes = await fetch(props.pdf).then(res => {\n      return res.arrayBuffer();\n    });\n    const pdfDoc = await PDFDocument.load(existingPdfBytes);\n    const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    const pages = pdfDoc.getPages();\n    const textSize = 16;\n    props.result.forEach(res => {\n      if (res.type === \"text\") {\n        console.log(res.x, res.y, res.ref.current.offsetLeft, res.ref.current.offsetTop);\n        console.log(\"Width\", res.ref.current.getBoundingClientRect().width, res.ref.current.offsetWidth);\n        pages[res.page - 1].drawText(res.text, {\n          x: res.ref.current.offsetLeft - props.bounds.x,\n          y: props.bounds.y - res.ref.current.offsetTop - 17,\n          size: textSize,\n          font: helveticaFont,\n          color: rgb(0.95, 0.1, 0.1),\n          maxWidth: res.ref.current.getBoundingClientRect().width,\n          lineHeight: 15\n        });\n      }\n\n      if (res.type === \"freehand\") {\n        const pathData = \"M \" + res.arr.map(p => {\n          return `${p.get('x')},${p.get('y')}`;\n        }).join(\" L \");\n        pages[res.page - 1].moveTo(0, pages[0].getHeight());\n        pages[res.page - 1].drawSvgPath(pathData, {\n          borderColor: rgb(0.95, 0.1, 0.1)\n        });\n      }\n    });\n    const pdfBytes = await pdfDoc.save();\n    let blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    let link = document.createElement('a');\n    link.href = window.URL.createObjectURL(blob);\n    let fileName = \"na2\";\n    link.download = fileName;\n    link.click();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default ModifyPage;","map":{"version":3,"sources":["/Users/mac/Desktop/PdfEditor/react-pdf-editor/src/Components/ModifyPage.js"],"names":["React","useEffect","PDFDocument","rgb","StandardFonts","ModifyPage","props","buttonType","modifyPdf","resetButtonType","existingPdfBytes","fetch","pdf","then","res","arrayBuffer","pdfDoc","load","helveticaFont","embedFont","Helvetica","pages","getPages","textSize","result","forEach","type","console","log","x","y","ref","current","offsetLeft","offsetTop","getBoundingClientRect","width","offsetWidth","page","drawText","text","bounds","size","font","color","maxWidth","lineHeight","pathData","arr","map","p","get","join","moveTo","getHeight","drawSvgPath","borderColor","pdfBytes","save","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","fileName","download","click"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\nfunction ModifyPage(props) {\n\n    useEffect(() => {\n        if(props.buttonType === \"download\")\n        {\n            modifyPdf();\n            props.resetButtonType();\n        }\n    },[props.buttonType])\n    \n    async function modifyPdf()\n    {\n          const existingPdfBytes = await fetch(props.pdf).then(res => \n            {\n                return(res.arrayBuffer());\n            })\n\n        const pdfDoc = await PDFDocument.load(existingPdfBytes)\n        const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\n        const pages = pdfDoc.getPages()\n        const textSize = 16\n\n        props.result.forEach((res) => {\n            if(res.type === \"text\")\n            {\n                console.log(res.x,res.y,res.ref.current.offsetLeft,res.ref.current.offsetTop);\n                console.log(\"Width\",res.ref.current.getBoundingClientRect().width, res.ref.current.offsetWidth);\n                pages[res.page - 1].drawText(res.text, {\n                    x: res.ref.current.offsetLeft - props.bounds.x,\n                    y: props.bounds.y - res.ref.current.offsetTop -17,\n                    size: textSize,\n                    font: helveticaFont,\n                    color: rgb(0.95, 0.1, 0.1),\n                    maxWidth: res.ref.current.getBoundingClientRect().width,\n                    lineHeight: 15\n                })\n            }\n            if(res.type === \"freehand\")\n            {\n                const pathData = \"M \" +\n                res.arr\n                .map(p => {\n                    return `${p.get('x')},${p.get('y')}`;\n                })\n                .join(\" L \");\n                pages[res.page-1].moveTo(0, pages[0].getHeight());\n                pages[res.page-1].drawSvgPath(pathData,{\n                    borderColor: rgb(0.95, 0.1, 0.1),\n                });\n            }\n        })\n        \n        const pdfBytes = await pdfDoc.save()\n\n        let blob = new Blob([pdfBytes], {type: \"application/pdf\"});\n        let link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        let fileName = \"na2\";\n        link.download = fileName;\n        link.click();\n\n    }\n\n    return (\n        <div>\n            {/*<button style = {{marginTop: \"1%\"}} onClick = {modifyPdf}>Download PDF</button>*/}\n        </div>\n    )\n}\n\nexport default ModifyPage\n"]},"metadata":{},"sourceType":"module"}