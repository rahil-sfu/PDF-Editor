{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { setFillingColor, setStrokingColor } from \"./colors\";\nimport { asNumber } from \"./objects\";\nimport { appendBezierCurve, beginText, closePath, drawObject, endText, fill, fillAndStroke, lineTo, moveTo, nextLine, popGraphicsState, pushGraphicsState, rotateAndSkewTextRadiansAndTranslate, rotateRadians, scale, setFontAndSize, setLineHeight, setLineWidth, showText, skewRadians, stroke, translate, setLineCap, setGraphicsState, setDashPattern } from \"./operators\";\nimport { toRadians } from \"./rotations\";\nimport { svgPathToOperators } from \"./svgPath\";\nexport var drawText = function (line, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size), rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y), showText(line), endText(), popGraphicsState()].filter(Boolean);\n};\nexport var drawLinesOfText = function (lines, options) {\n  var operators = [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size), setLineHeight(options.lineHeight), rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y)].filter(Boolean);\n\n  for (var idx = 0, len = lines.length; idx < len; idx++) {\n    operators.push(showText(lines[idx]), nextLine());\n  }\n\n  operators.push(endText(), popGraphicsState());\n  return operators;\n};\nexport var drawImage = function (name, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), scale(options.width, options.height), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), drawObject(name), popGraphicsState()].filter(Boolean);\n};\nexport var drawPage = function (name, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), scale(options.xScale, options.yScale), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), drawObject(name), popGraphicsState()].filter(Boolean);\n};\nexport var drawLine = function (options) {\n  var _a, _b;\n\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setStrokingColor(options.color), setLineWidth(options.thickness), setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0), moveTo(options.start.x, options.start.y), options.lineCap && setLineCap(options.lineCap), moveTo(options.start.x, options.start.y), lineTo(options.end.x, options.end.y), stroke(), popGraphicsState()].filter(Boolean);\n};\nexport var drawRectangle = function (options) {\n  var _a, _b;\n\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), moveTo(0, 0), lineTo(0, options.height), lineTo(options.width, options.height), lineTo(options.width, 0), closePath(), // prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()].filter(Boolean);\n};\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nexport var drawEllipsePath = function (config) {\n  var x = asNumber(config.x);\n  var y = asNumber(config.y);\n  var xScale = asNumber(config.xScale);\n  var yScale = asNumber(config.yScale);\n  x -= xScale;\n  y -= yScale;\n  var ox = xScale * KAPPA;\n  var oy = yScale * KAPPA;\n  var xe = x + xScale * 2;\n  var ye = y + yScale * 2;\n  var xm = x + xScale;\n  var ym = y + yScale;\n  return [pushGraphicsState(), moveTo(x, ym), appendBezierCurve(x, ym - oy, xm - ox, y, xm, y), appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym), appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye), appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym), popGraphicsState()];\n};\nexport var drawEllipse = function (options) {\n  var _a, _b;\n\n  return __spreadArrays([pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)], drawEllipsePath({\n    x: options.x,\n    y: options.y,\n    xScale: options.xScale,\n    yScale: options.yScale\n  }), [// prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()]).filter(Boolean);\n};\nexport var drawSvgPath = function (path, options) {\n  var _a, _b, _c, _d;\n\n  return __spreadArrays([pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), // SVG path Y axis is opposite pdf-lib's\n  options.scale ? scale(options.scale, -options.scale) : scale(1, -1), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), options.borderWidth && setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0), setDashPattern((_c = options.borderDashArray) !== null && _c !== void 0 ? _c : [], (_d = options.borderDashPhase) !== null && _d !== void 0 ? _d : 0)], svgPathToOperators(path), [// prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()]).filter(Boolean);\n};","map":{"version":3,"sources":["../../src/api/operations.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { setFillingColor, setStrokingColor } from \"./colors\";\nimport { asNumber } from \"./objects\";\nimport { appendBezierCurve, beginText, closePath, drawObject, endText, fill, fillAndStroke, lineTo, moveTo, nextLine, popGraphicsState, pushGraphicsState, rotateAndSkewTextRadiansAndTranslate, rotateRadians, scale, setFontAndSize, setLineHeight, setLineWidth, showText, skewRadians, stroke, translate, setLineCap, setGraphicsState, setDashPattern, } from \"./operators\";\nimport { toRadians } from \"./rotations\";\nimport { svgPathToOperators } from \"./svgPath\";\nexport var drawText = function (line, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n        rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y),\n        showText(line),\n        endText(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawLinesOfText = function (lines, options) {\n    var operators = [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n        setLineHeight(options.lineHeight),\n        rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y),\n    ].filter(Boolean);\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n        operators.push(showText(lines[idx]), nextLine());\n    }\n    operators.push(endText(), popGraphicsState());\n    return operators;\n};\nexport var drawImage = function (name, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        scale(options.width, options.height),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        drawObject(name),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawPage = function (name, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        scale(options.xScale, options.yScale),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        drawObject(name),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawLine = function (options) {\n    var _a, _b;\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setStrokingColor(options.color),\n        setLineWidth(options.thickness),\n        setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0),\n        moveTo(options.start.x, options.start.y),\n        options.lineCap && setLineCap(options.lineCap),\n        moveTo(options.start.x, options.start.y),\n        lineTo(options.end.x, options.end.y),\n        stroke(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawRectangle = function (options) {\n    var _a, _b;\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        moveTo(0, 0),\n        lineTo(0, options.height),\n        lineTo(options.width, options.height),\n        lineTo(options.width, 0),\n        closePath(),\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nexport var drawEllipsePath = function (config) {\n    var x = asNumber(config.x);\n    var y = asNumber(config.y);\n    var xScale = asNumber(config.xScale);\n    var yScale = asNumber(config.yScale);\n    x -= xScale;\n    y -= yScale;\n    var ox = xScale * KAPPA;\n    var oy = yScale * KAPPA;\n    var xe = x + xScale * 2;\n    var ye = y + yScale * 2;\n    var xm = x + xScale;\n    var ym = y + yScale;\n    return [\n        pushGraphicsState(),\n        moveTo(x, ym),\n        appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),\n        appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),\n        appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),\n        appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym),\n        popGraphicsState(),\n    ];\n};\nexport var drawEllipse = function (options) {\n    var _a, _b;\n    return __spreadArrays([\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)\n    ], drawEllipsePath({\n        x: options.x,\n        y: options.y,\n        xScale: options.xScale,\n        yScale: options.yScale,\n    }), [\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ]).filter(Boolean);\n};\nexport var drawSvgPath = function (path, options) {\n    var _a, _b, _c, _d;\n    return __spreadArrays([\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        // SVG path Y axis is opposite pdf-lib's\n        options.scale ? scale(options.scale, -options.scale) : scale(1, -1),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        options.borderWidth && setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0),\n        setDashPattern((_c = options.borderDashArray) !== null && _c !== void 0 ? _c : [], (_d = options.borderDashPhase) !== null && _d !== void 0 ? _d : 0)\n    ], svgPathToOperators(path), [\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ]).filter(Boolean);\n};\n//# sourceMappingURL=operations.js.map"]},"metadata":{},"sourceType":"module"}