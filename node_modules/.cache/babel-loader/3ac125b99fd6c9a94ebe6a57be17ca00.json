{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/PdfEditor/react-pdf-editor/src/Components/AutoTextArea.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nfunction AutoTextArea(props) {\n  const textAreaRef = useRef(null);\n  const divAreaRef = useRef(null);\n  const [text, setText] = useState(props.val);\n  const [textAreaHeight, setTextAreaHeight] = useState(\"auto\");\n  const [parentHeight, setParentHeight] = useState(\"auto\");\n  useEffect(() => {\n    setParentHeight(`${textAreaRef.current.scrollHeight}px`);\n    setTextAreaHeight(`${textAreaRef.current.scrollHeight}px`);\n  }, [text]);\n  useEffect(() => {\n    textAreaRef.current.focus();\n  }, []);\n\n  const onChangeHandler = event => {\n    setTextAreaHeight(\"auto\");\n    setParentHeight(`${textAreaRef.current.scrollHeight}px`);\n    setText(event.target.value);\n  };\n\n  const onBlurHandler = () => {\n    props.onTextChange(props.unique_key, text, divAreaRef);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: ({\n      minHeight: parentHeight\n    }, props.style),\n    ref: divAreaRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    rows: 1,\n    style: {\n      height: textAreaHeight,\n      zIndex: 10,\n      background: \"transparent\",\n      border: \"none\",\n      color: \"red\",\n      fontFamily: \"helvetica\"\n    },\n    value: text,\n    onChange: onChangeHandler,\n    onBlur: onBlurHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }));\n}\n\n;\nexport default AutoTextArea;","map":{"version":3,"sources":["/Users/mac/Desktop/PdfEditor/react-pdf-editor/src/Components/AutoTextArea.js"],"names":["React","useState","useEffect","useRef","AutoTextArea","props","textAreaRef","divAreaRef","text","setText","val","textAreaHeight","setTextAreaHeight","parentHeight","setParentHeight","current","scrollHeight","focus","onChangeHandler","event","target","value","onBlurHandler","onTextChange","unique_key","minHeight","style","height","zIndex","background","border","color","fontFamily"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,MAAlC,QAA+C,OAA/C;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,QAAMC,WAAW,GAAGH,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMI,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACI,KAAK,CAACK,GAAP,CAAhC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,MAAD,CAApD;AACG,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,MAAD,CAAhD;AAEHC,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,eAAe,CAAE,GAAER,WAAW,CAACS,OAAZ,CAAoBC,YAAa,IAArC,CAAf;AACAJ,IAAAA,iBAAiB,CAAE,GAAEN,WAAW,CAACS,OAAZ,CAAoBC,YAAa,IAArC,CAAjB;AACG,GAHK,EAGH,CAACR,IAAD,CAHG,CAAT;AAKGN,EAAAA,SAAS,CAAC,MAAM;AAClBI,IAAAA,WAAW,CAACS,OAAZ,CAAoBE,KAApB;AACA,GAFW,EAEV,EAFU,CAAT;;AAIH,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAClCP,IAAAA,iBAAiB,CAAC,MAAD,CAAjB;AACAE,IAAAA,eAAe,CAAE,GAAER,WAAW,CAACS,OAAZ,CAAoBC,YAAa,IAArC,CAAf;AACAP,IAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACG,GAJJ;;AAMG,QAAMC,aAAa,GAAG,MAAM;AACxBjB,IAAAA,KAAK,CAACkB,YAAN,CAAmBlB,KAAK,CAACmB,UAAzB,EAAoChB,IAApC,EAAyCD,UAAzC;AACN,GAFE;;AAIH,sBACC;AACC,IAAA,KAAK,GAAE;AACNkB,MAAAA,SAAS,EAAEZ;AADL,OAEJR,KAAK,CAACqB,KAFJ,CADN;AAIC,IAAA,GAAG,EAAInB,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC;AACC,IAAA,GAAG,EAAID,WADR;AAEC,IAAA,IAAI,EAAI,CAFT;AAGC,IAAA,KAAK,EAAI;AAACqB,MAAAA,MAAM,EAAEhB,cAAT;AAAyBiB,MAAAA,MAAM,EAAE,EAAjC;AAAqCC,MAAAA,UAAU,EAAE,aAAjD;AAAgEC,MAAAA,MAAM,EAAE,MAAxE;AAAgFC,MAAAA,KAAK,EAAC,KAAtF;AAA6FC,MAAAA,UAAU,EAAE;AAAzG,KAHV;AAIa,IAAA,KAAK,EAAIxB,IAJtB;AAKC,IAAA,QAAQ,EAAIU,eALb;AAMa,IAAA,MAAM,EAAII,aANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAiBA;;AAAA;AAED,eAAelB,YAAf","sourcesContent":["import React, {useState,useEffect,useRef} from \"react\";\n\nfunction AutoTextArea(props) {\n\tconst textAreaRef = useRef(null);\n\tconst divAreaRef = useRef(null);\n\tconst [text, setText] = useState(props.val);\n\tconst [textAreaHeight, setTextAreaHeight] = useState(\"auto\");\n    const [parentHeight, setParentHeight] = useState(\"auto\");\n\n\tuseEffect(() => {\n\t\tsetParentHeight(`${textAreaRef.current.scrollHeight}px`);\n\t\tsetTextAreaHeight(`${textAreaRef.current.scrollHeight}px`);\n    }, [text]);\n    \n    useEffect(() => {\n\t\ttextAreaRef.current.focus();\n\t},[])\n\n\tconst onChangeHandler = (event) => {\n\t\tsetTextAreaHeight(\"auto\");\n\t\tsetParentHeight(`${textAreaRef.current.scrollHeight}px`);\n\t\tsetText(event.target.value);\n    };\n    \n    const onBlurHandler = () => {\n        props.onTextChange(props.unique_key,text,divAreaRef);\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tminHeight: parentHeight,\n\t\t\t}, props.style}\n\t\t\tref = {divAreaRef}\n\t\t>\n\t\t\t<textarea\n\t\t\t\tref = {textAreaRef}\n\t\t\t\trows = {1}\n\t\t\t\tstyle = {{height: textAreaHeight, zIndex: 10, background: \"transparent\", border: \"none\", color:\"red\", fontFamily: \"helvetica\"}}\n                value = {text}\n\t\t\t\tonChange = {onChangeHandler}\n                onBlur = {onBlurHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default AutoTextArea;"]},"metadata":{},"sourceType":"module"}